@use "flex";
@use "typography";
@use "color";

@mixin buttonStyle($color, $hover-color, $outline-alpha) {
  color: #ffffff;
  background: $color;
  border: none;
  &:hover:not(.disabled) {
    background: rgba($color, 0.75);
  }
  &.outlined {
    color: $color;
    background: #ffffff;
    border: 1px solid rgba($color, $outline-alpha);
    &:hover:not(.disabled) {
      background: $hover-color;
    }
  }
  &.transparent {
    color: $color;
    background: transparent;
    border: none;
    &:hover:not(.disabled) {
      background: $hover-color;
    }
  }
}

.fes-button {
  line-height: 1;
  text-align: center;
  @extend .text-wrap;
  @extend .d-flex-center;
  cursor: pointer;
  transition: all 0.3s;
  &.disabled {
    cursor: default;
  }

  $outline-alpha: 0.6;

  $color: map-get(color.$gray-color-map, 700);
  $hover-color: map-get(color.$gray-color-map, 100);
  @include buttonStyle($color, $hover-color, $outline-alpha);

  &.primary {
    $color: color.$primary-color;
    $hover-color: color.$primary-hover-color;
    @include buttonStyle($color, $hover-color, $outline-alpha);
  }
  &.secondary {
    $color: color.$secondary-color;
    $hover-color: color.$secondary-hover-color;
    @include buttonStyle($color, $hover-color, $outline-alpha);
  }
  &.success {
    $color: color.$success-color;
    $hover-color: color.$success-hover-color;
    @include buttonStyle($color, $hover-color, $outline-alpha);
  }
  &.warn {
    $color: color.$warn-color;
    $hover-color: color.$warn-hover-color;
    @include buttonStyle($color, $hover-color, $outline-alpha);
  }
  &.alert {
    $color: color.$alert-color;
    $hover-color: color.$alert-hover-color;
    @include buttonStyle($color, $hover-color, $outline-alpha);
  }
  &.disabled {
    $color: map-get(color.$gray-color-map, 400);
    $hover-color: map-get(color.$gray-color-map, 50);
    @include buttonStyle($color, $hover-color, $outline-alpha);
  }
}
