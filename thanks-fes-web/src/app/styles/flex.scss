@use "constant";

/* Flex style */
.d-flex {
  display: flex;
}
.d-flex-column {
  @extend .d-flex;
  flex-direction: column;
}
.d-flex-reverse {
  @extend .d-flex;
  flex-direction: row-reverse;
}
.d-flex-column-reverse {
  @extend .d-flex;
  flex-direction: column-reverse;
}
.d-flex-wrap {
  @extend .d-flex;
  flex-wrap: wrap;
}
.d-flex-wrap-reverse {
  @extend .d-flex;
  flex-wrap: wrap-reverse;
}
.d-flex-column-wrap {
  @extend .d-flex-column;
  flex-wrap: wrap;
}
.d-flex-wrap-column-reverse {
  @extend .d-flex-column;
  flex-wrap: wrap-reverse;
}
$flex-justify-map: (
  center: center,
  start: start,
  end: end,
  space-between: space-between,
  space-around: space-around,
  space-evenly: space-evenly,
);

$flex-align-map: (
  stretch: stretch,
  center: center,
  start: flex-start,
  end: flex-end,
  space-between: space-between,
  space-around: space-around,
  space-evenly: space-evenly,
);

@each $key, $justify in $flex-justify-map {
  .justify-#{$key} {
    justify-content: $justify;
  }
}
@each $key, $align in $flex-align-map {
  .align-#{$key} {
    align-items: $align;
  }
}

.d-flex-center {
  @extend .d-flex;
  @extend .justify-center;
  @extend .align-center;
}
.d-flex-align-center {
  @extend .d-flex;
  @extend .align-center;
}
.d-flex-justify-center {
  @extend .d-flex;
  @extend .justify-center;
}
.d-flex-column-center {
  @extend .d-flex-column;
  @extend .justify-center;
  @extend .align-center;
}
.d-flex-column-align-center {
  @extend .d-flex-column;
  @extend .align-center;
}
.d-flex-column-justify-center {
  @extend .d-flex-column;
  @extend .justify-center;
}
.flex-1 {
  flex: 1;
}
.flex-grow {
  flex-grow: 1;
}

// flex gap
$sizes: ();

@for $i from 0 through 16 {
  $sizes: append($sizes, $i);
}

@each $size in $sizes {
  .gx-#{$size} {
    gap: 0 constant.rem($size * 4);
  }
  .gy-#{$size} {
    gap: constant.rem($size * 4) 0;
  }
}
@each $yGap in $sizes {
  @each $xGap in $sizes {
    .ga-#{$yGap}-#{$xGap} {
      gap: constant.rem($yGap * 4) constant.rem($xGap * 4);
    }
  }
}
